<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="18" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="35534" started-at="2020-03-26T16:31:11 IST" finished-at="2020-03-26T16:31:46 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="35534" started-at="2020-03-26T16:31:11 IST" finished-at="2020-03-26T16:31:46 IST">
      <class name="TestCases.TestCase002_Simple_Get_Request_Non_BDD">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase002_Simple_Get_Request_Non_BDD@2bbf4b8b]" name="setup" is-config="true" duration-ms="3" started-at="2020-03-26T16:31:27 IST" finished-at="2020-03-26T16:31:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="postValidation()[pri:0, instance:TestCases.TestCase002_Simple_Get_Request_Non_BDD@2bbf4b8b]" name="postValidation" duration-ms="910" started-at="2020-03-26T16:31:27 IST" finished-at="2020-03-26T16:31:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postValidation -->
      </class> <!-- TestCases.TestCase002_Simple_Get_Request_Non_BDD -->
      <class name="TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object@ea1a8d5]" name="setup" is-config="true" duration-ms="6" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object@ea1a8d5]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validatePost1()[pri:0, instance:TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object@ea1a8d5]" name="validatePost1" duration-ms="86" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePost1 -->
        <test-method status="PASS" signature="validatePost()[pri:1, instance:TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object@ea1a8d5]" name="validatePost" duration-ms="37" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePost -->
      </class> <!-- TestCases.TestCase007_Post_Request_Using_Serialization_of_POJO_into_JSON_Request_Body_Object -->
      <class name="TestCases.TestCase003_Post_Request_Using_HashMap">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase003_Post_Request_Using_HashMap@528931cf]" name="setup" is-config="true" duration-ms="4" started-at="2020-03-26T16:31:22 IST" finished-at="2020-03-26T16:31:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="validatePost()[pri:1, instance:TestCases.TestCase003_Post_Request_Using_HashMap@528931cf]" name="validatePost" duration-ms="1015" started-at="2020-03-26T16:31:22 IST" finished-at="2020-03-26T16:31:23 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePost -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase003_Post_Request_Using_HashMap@528931cf]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:22 IST" finished-at="2020-03-26T16:31:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateResponse()[pri:2, instance:TestCases.TestCase003_Post_Request_Using_HashMap@528931cf]" name="validateResponse" duration-ms="812" started-at="2020-03-26T16:31:23 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponse -->
      </class> <!-- TestCases.TestCase003_Post_Request_Using_HashMap -->
      <class name="TestCases.TestCase003_Post_Request_Using_JsonObject">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase003_Post_Request_Using_JsonObject@5faeada1]" name="setup" is-config="true" duration-ms="2" started-at="2020-03-26T16:31:21 IST" finished-at="2020-03-26T16:31:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="validateResponseUsingJsonFile()[pri:3, instance:TestCases.TestCase003_Post_Request_Using_JsonObject@5faeada1]" name="validateResponseUsingJsonFile" duration-ms="1230" started-at="2020-03-26T16:31:21 IST" finished-at="2020-03-26T16:31:22 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseUsingJsonFile -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase003_Post_Request_Using_JsonObject@5faeada1]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:21 IST" finished-at="2020-03-26T16:31:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- TestCases.TestCase003_Post_Request_Using_JsonObject -->
      <class name="TestCases.TestCase004_Post_Request_Using_Param">
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase004_Post_Request_Using_Param@30a3107a]" name="setUp" is-config="true" duration-ms="1" started-at="2020-03-26T16:31:28 IST" finished-at="2020-03-26T16:31:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validatePutUsingParams()[pri:0, instance:TestCases.TestCase004_Post_Request_Using_Param@30a3107a]" name="validatePutUsingParams" duration-ms="773" started-at="2020-03-26T16:31:28 IST" finished-at="2020-03-26T16:31:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatePutUsingParams -->
      </class> <!-- TestCases.TestCase004_Post_Request_Using_Param -->
      <class name="TestCases.TestCase005_Parsing_Resource_Using_JsonPath">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="setup" is-config="true" duration-ms="2" started-at="2020-03-26T16:31:28 IST" finished-at="2020-03-26T16:31:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:28 IST" finished-at="2020-03-26T16:31:28 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="FAIL" signature="headValidation()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="headValidation" duration-ms="3688" started-at="2020-03-26T16:31:28 IST" finished-at="2020-03-26T16:31:32 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [200] but found [301]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [200] but found [301]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:839)
at org.testng.Assert.assertEquals(Assert.java:849)
at TestCases.TestCase005_Parsing_Resource_Using_JsonPath.headValidation(TestCase005_Parsing_Resource_Using_JsonPath.java:37)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- headValidation -->
        <test-method status="PASS" signature="validate2()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="validate2" duration-ms="2581" started-at="2020-03-26T16:31:32 IST" finished-at="2020-03-26T16:31:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate2 -->
        <test-method status="PASS" signature="validate3()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="validate3" duration-ms="3303" started-at="2020-03-26T16:31:35 IST" finished-at="2020-03-26T16:31:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate3 -->
        <test-method status="PASS" signature="validate4()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="validate4" duration-ms="2698" started-at="2020-03-26T16:31:38 IST" finished-at="2020-03-26T16:31:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate4 -->
        <test-method status="PASS" signature="validateSpecificBody()[pri:0, instance:TestCases.TestCase005_Parsing_Resource_Using_JsonPath@33c7e1bb]" name="validateSpecificBody" duration-ms="4051" started-at="2020-03-26T16:31:41 IST" finished-at="2020-03-26T16:31:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpecificBody -->
      </class> <!-- TestCases.TestCase005_Parsing_Resource_Using_JsonPath -->
      <class name="TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource@7a1ebcd8]" name="setup" is-config="true" duration-ms="70" started-at="2020-03-26T16:31:11 IST" finished-at="2020-03-26T16:31:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource@7a1ebcd8]" name="setUp" is-config="true" duration-ms="339" started-at="2020-03-26T16:31:11 IST" finished-at="2020-03-26T16:31:11 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validate4()[pri:0, instance:TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource@7a1ebcd8]" name="validate4" duration-ms="4681" started-at="2020-03-26T16:31:11 IST" finished-at="2020-03-26T16:31:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate4 -->
        <test-method status="PASS" signature="validateSpecificBody()[pri:0, instance:TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource@7a1ebcd8]" name="validateSpecificBody" duration-ms="5037" started-at="2020-03-26T16:31:16 IST" finished-at="2020-03-26T16:31:21 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateSpecificBody -->
      </class> <!-- TestCases.TestCase006_Parsing_Using_JsonPath_Complex_Resource -->
      <class name="TestCases.TestCase001_Simple_Get_Request_BDD2">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD2@1563da5]" name="setup" is-config="true" duration-ms="2" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="validateGet_Using_Body()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD2@1563da5]" name="validateGet_Using_Body" duration-ms="1318" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:26 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path args.empID doesn't match.
Expected: is <100>
  Actual: null
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path args.empID doesn't match.
Expected: is <100>
  Actual: null

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:261)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:51)
at io.restassured.specification.ResponseSpecification$body$2.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:108)
at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)
at io.restassured.internal.ValidatableResponseImpl.super$2$body(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1262)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy:298)
at io.restassured.internal.ValidatableResponseImpl.body(ValidatableResponseImpl.groovy)
at TestCases.TestCase001_Simple_Get_Request_BDD2.validateGet_Using_Body(TestCase001_Simple_Get_Request_BDD2.java:59)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGet_Using_Body -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD2@1563da5]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:24 IST" finished-at="2020-03-26T16:31:24 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateGet_Using_Response_and_JSONPATH()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD2@1563da5]" name="validateGet_Using_Response_and_JSONPATH" duration-ms="1217" started-at="2020-03-26T16:31:26 IST" finished-at="2020-03-26T16:31:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGet_Using_Response_and_JSONPATH -->
      </class> <!-- TestCases.TestCase001_Simple_Get_Request_BDD2 -->
      <class name="TestCases.TestCase001_Simple_Get_Request_BDD">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD@34c4973]" name="setup" is-config="true" duration-ms="3" started-at="2020-03-26T16:31:45 IST" finished-at="2020-03-26T16:31:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD@34c4973]" name="setUp" is-config="true" duration-ms="0" started-at="2020-03-26T16:31:45 IST" finished-at="2020-03-26T16:31:45 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="validateEntireBody()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD@34c4973]" name="validateEntireBody" duration-ms="723" started-at="2020-03-26T16:31:45 IST" finished-at="2020-03-26T16:31:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEntireBody -->
        <test-method status="PASS" signature="validateGet()[pri:0, instance:TestCases.TestCase001_Simple_Get_Request_BDD@34c4973]" name="validateGet" duration-ms="846" started-at="2020-03-26T16:31:46 IST" finished-at="2020-03-26T16:31:46 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateGet -->
      </class> <!-- TestCases.TestCase001_Simple_Get_Request_BDD -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
